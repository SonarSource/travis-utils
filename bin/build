#!/bin/bash
# Usage build "user/project" "sha1"
# If project is private, then  the env variable GITHUB_TOKEN must be defined from the outside.
# Argument sha1 can be "HEAD".
# Non-Travis environments are supported.
# Example: build "SonarSource/sonarqube" "266e313"

set -euo pipefail

PROJECT=$1
SHA1=$2
DIRECTORY="/tmp/$PROJECT/$SHA1"
MAVEN_LOCAL_REPOSITORY=`maven_local_repository`

if [ "${SHA1}" == "HEAD" ]; then
  echo "Get SHA1 of [$PROJECT:HEAD]"
  if [ -z "${GITHUB_TOKEN:=}" ]; then
    SHA1=`git ls-remote https://github.com/${PROJECT} HEAD | grep -o '^[a-f0-9]\{40\}'`
  else
    SHA1=`git ls-remote https://${GITHUB_TOKEN}@github.com/${PROJECT} HEAD | grep -o '^[a-f0-9]\{40\}'`
  fi
  echo "${SHA1}"
fi

if [ -f "$MAVEN_LOCAL_REPOSITORY/$PROJECT/$SHA1" ]; then
  echo "Project [$PROJECT:$SHA1] is already on cache"
else
  $(dirname -- "$0")/fetch $DIRECTORY $PROJECT $SHA1

  echo "Build [$PROJECT:$SHA1]"
  cd $DIRECTORY
  if [ -f "quick-build.sh" ]; then
    ./quick-build.sh
  else
    mvn install -Dsource.skip=true -Denforcer.skip=true -Danimal.sniffer.skip=true -Dmaven.test.skip=true -Pdev
  fi
  cd -

  # delete all references to other SHA1 of project
  rm -Rf $MAVEN_LOCAL_REPOSITORY/$PROJECT
  mkdir -p $MAVEN_LOCAL_REPOSITORY/$PROJECT

  # mark the SHA1 as available in cache
  echo "OK" > $MAVEN_LOCAL_REPOSITORY/$PROJECT/${SHA1////-}
fi
